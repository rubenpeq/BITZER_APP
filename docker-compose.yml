services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: bitzer
      POSTGRES_PASSWORD: bitzer123
      POSTGRES_DB: orders_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: bitzer-backend
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ENV: ${ENV}
      DOCS_USER: ${DOCS_USER}
      DOCS_PASSWORD: ${DOCS_PASSWORD}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      ENABLE_DOCS: ${ENABLE_DOCS}
    ports:
      - "8000:8000"   # optional for direct access; keep if you need direct dev access
    volumes:
      - ./backend/app:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_FASTAPI_URL: ${VITE_FASTAPI_URL}
    container_name: bitzer-frontend
    depends_on:
      - backend
    environment:
      VITE_FASTAPI_URL: ${VITE_FASTAPI_URL}
    # Remove host port publish for the frontend - the reverse-proxy will serve it.
    # ports:
    #  - "3000:80"

  nginx:
    image: nginx:stable-alpine
    container_name: bitzer-proxy
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"    # redirect to HTTPS
      - "443:443"  # main HTTPS endpoint on LAN
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs/bitzer.crt:/etc/nginx/certs/bitzer.crt:ro
      - ./nginx/certs/bitzer.key:/etc/nginx/certs/bitzer.key:ro
    restart: unless-stopped

volumes:
  pgdata:
